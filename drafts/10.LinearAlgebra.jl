
# # Basic Linear Algebra

A = rand(1:4,3,3)
#----------------------------------------------------------------------------

B = A ## B and A are references to the same memory
C = copy(A)
[B C]
#----------------------------------------------------------------------------

A[1] = 17
#----------------------------------------------------------------------------

A
#----------------------------------------------------------------------------

B = rand(1:4,3,3)
#----------------------------------------------------------------------------

 B' * A
#----------------------------------------------------------------------------

[B C]
#----------------------------------------------------------------------------

x = ones(3)
#----------------------------------------------------------------------------

b = A * x
#----------------------------------------------------------------------------

Asym = A + A'
#----------------------------------------------------------------------------

Asym
#----------------------------------------------------------------------------

A.'
#----------------------------------------------------------------------------

A'
#----------------------------------------------------------------------------

Apd = A'A
#----------------------------------------------------------------------------

A\b
#----------------------------------------------------------------------------

A = randn(3,3)
#----------------------------------------------------------------------------

[A[:,1] A[:,1]] \b
#----------------------------------------------------------------------------

## Factorization

using LinearAlgebra

A = rand(3,3)

l,u,p = lu(A)

display(norm(l*u-A))
display(norm(l*u-A[p,:])) ## use the pivoting vector

l,u,p = LinearAlgebra.lu(A,Val{false})
norm(l*u - A)

Alu = lu(A,pivot)

Alu.P

Alu[:L]

Alu[:U]

x = ones(3)
b = A*x

Alu[:U]\(Alu[:L]\(Alu[:P]b))

Alu\b

det(A)

det(Alu)

Asym = A + A'

AsymEig = eigfact(Asym)

AsymEig[:values]

inv(AsymEig)*Asym

eig(Asym)

Asvd = svdfact(A[:,1:2])

Asvd\b

A

Diagonal(diag(A))

Diagonal(A)

for i = 1:10
    println(i)
end

Nx , Ny = 64, 128

xmin, xmax = -pi, pi
dx = (xmax-xmin)/Nx 
x = xmin:dx:xmax-dx
xper = xmin:dx:xmax
   
ymin, ymax =-pi, pi
dy = (ymax-ymin)/Ny
y    = ymin:dy:ymax-dy
yper = ymin:dy:ymax
   
## wave number
kx = 2*pi/(xmax-xmin)*[0:Nx/2-1;Nx/2-Nx:Nx-1-Nx]
ky = 2*pi/(ymax-ymin)*[0:Ny/2-1;Ny/2-Ny:Ny-1-Ny];
   
## initial condition 
f0=zeros(Nx,Ny)
for i=1:Nx
   xx=xmin+(i-1)*dx
   for j=1:Ny
      yy=ymin+(j-1)*dy
      f0[i,j]=exp(-(xx-1)*(xx-1)/0.1)*exp(-(yy-1)*(yy-1)/0.1)
   end
end

M = [10*i+j for i = 1:4, j = 1:5]

f( x ) = x + 1

mapslices(M,[1,2])

M
#----------------------------------------------------------------------------

using LinearAlgebra
A = rand(-5:5,3,4)
Q = rand(-5:5,3,4)
#----------------------------------------------------------------------------

Q' * A
#----------------------------------------------------------------------------

Q' â‹… A
#----------------------------------------------------------------------------

dot(Q', A)
#----------------------------------------------------------------------------

Q * A
#----------------------------------------------------------------------------


#----------------------------------------------------------------------------


#----------------------------------------------------------------------------
